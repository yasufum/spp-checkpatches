#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

#test "" = "$(grep '^Signed-off-by: ' "$1" |
#         sort | uniq -c | sed -e '/^[   ]*1[    ]/d')" || {
#        echo >&2 Duplicate Signed-off-by lines.
#        exit 1
#}

numLine=0
mkdir -p ./temp
cat $1 > ./temp/commitmsg
echo 0 > ./temp/kazu

while read line

 do

   if 
      [ $((`echo "$line" | wc -m`  )) -le 72 ]; then
          numLine=$((numLine + 1))
          echo 0 >> ./temp/kazu

   elif
         echo "$line" | grep '^\#' >/dev/null  ; then
             numLine=$((numLine + 1))
              echo 0 >> ./temp/kazu
   else 
   
             numLine=$((numLine + 1))     
         echo ----------------------------------
         echo WARNING:LONG_LINE: line over  72characters
         echo $numLine:$line
         echo ----------------------------------
         echo 1 >> ./temp/kazu

   fi

 done < ./temp/commitmsg

while read line

  do

      if [ $line -gt  0 ] ; then
         rm ./temp/commitmsg
         rm ./temp/kazu
         rmdir ./temp

         exit 1

      fi

  done < ./kazu


rm ./temp/commitmsg
rm ./temp/kazu
rmdir ./temp

exit   
